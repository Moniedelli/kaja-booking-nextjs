// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Role {
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  name            String
  hashedPassword  String
  phoneNumber     String
  status          UserStatus @default(ACTIVE)
  role            Role @default(USER)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  transactions    Transaction[]
}

model Tour {
  id                  Int            @id @default(autoincrement())
  tourName            String
  location            String
  description         String
  price               Int
  itinerary           String
  note                String?
  imageSrc            String[]
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  transactions        Transaction[]
}

model Transaction {
  id                Int                 @id @default(autoincrement())
  total             Int
  status            Transactions_status @default(PENDING_PAYMENT)
  quantity          Int
  booking_date      DateTime            
  createdAt         DateTime            @default(now()) @db.Timestamp(0)
  updatedAt         DateTime            @default(now()) @db.Timestamp(0)
  userId            Int
  tourId            Int
  user              User                @relation(fields: [userId], references: [id])
  tours             Tour                @relation(fields: [tourId], references: [id])
  @@map("transactions")
}


enum Transactions_status {
  PENDING_PAYMENT
  PAID
  CANCELED
  DONE
}